#!/bin/bash
#
# Copyright (C) 2023  Keith Valin kvalin@redhat.com
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#

os_release_file="/etc/os-release"
get_version=0 # Fetch OS name by default

usage()
{
    echo -e "detect_os"
    echo -e "\t Detects the OS that the system is currently using and prints it out"
    echo -e "Options"

    echo -e "\t --os-version"
    echo -e "\t\t Determine the current OS version"

    echo -e "\t -h/--help/--usage"
    echo -e "\t\t Displays this message"
}

echo_stderr()
{
    echo ${@:1} > /dev/stderr
}

parse_os_release()
{
    source $os_release_file
    if [[ $get_version -eq 1 ]]; then
        echo $VERSION_ID
    else
        echo $ID
    fi
}

NOARG_OPTS=(
    "h"
    "help"

    "usage"
    "os-version"
)

opts=$(getopt \
    --longoptions "$(printf "%s," "${NOARG_OPTS[@]}")" \
    --name "$(basename "$0")" \
    --options "hc:" \
    -- "$@"
)

if [ $? -ne 0 ]; then
        exit 1
fi

eval set --$opts

flag_set=0

while [[ $# -gt 0 ]]; do
	case "$1" in
    -h | --usage | --help)
        usage
        exit 0
    ;;
    --os-version)
        get_version=1
        shift 1
    ;;
    --)
        break
    ;;
    *)
        echo_stderr Unknown option $1
        exit 1
    ;;
    esac
done

parse_os_release

exit 0
