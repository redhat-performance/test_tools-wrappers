#!/bin/bash
#
# Using a set of known results files, verify the test is still correct.
#
TOOLS_BIN=`echo $0 | rev | cut -d/ -f2- | rev`
test_cmd=""
test_name=""
verify_file=""
curdir=`pwd`
home_parent=""
run_user=""
vdir=""
exit_rtc=0

verification_run()
{
	tmp_dir=`pwd`
	verify_res_before=`mktemp ${tmp_dir}/wrapper_verify.XXXXX`
	verify_res_after=`mktemp ${tmp_dir}wrapper_verify.XXXXX`
	test_descript=$verify_file
	required_systems=`grep "^Required_Systems:" $test_descript | cut -d: -f2`
	fields=`grep ^fields $test_descript | cut -d: -f2-`
	header_lines=`grep ^header_lines $test_descript | cut -d: -f2`
	grep "^test:" $test_descript | cut -d: -f 2,3 > tests_to_run
	while IFS= read -r test_entry
	do
		pushd ${home_parent}/${run_user} > /dev/null
		if [[ -d "export_results" ]]; then
			cd export_results
			ls -d * > $verify_res_before
		else
			echo "" > $verify_res_before
		fi
		popd > /dev/null
		test_args=`echo $test_entry | cut -d':' -f1`
		test_base_results=`echo $test_entry | cut -d':' -f2`
		$test_cmd $test_args --home_parent $home_parent --run_user $run_user
		pushd ${home_parent}/${run_user}/export_results > /dev/null
		ls -d * > $verify_res_after
		popd >/dev/null
		base_res_file=$vdir/$test_base_results
		rdir=`diff $verify_res_after $verify_res_before | grep -v tar | grep '<' |  sed "s/< //g"`
		res_dir=${home_parent}/${run_user}/export_results/$rdir
		new_res_file=`find $res_dir -print | grep results_${test_name}.csv`
		$TOOLS_BIN/validate_line --results_file $new_res_file --fields "$fields" --base_results_file $base_res_file
		if [[ $? -ne 0 ]]; then
			exit_rtc=1
		fi
	done < "tests_to_run"
	if [[ $? -eq 0 ]]; then
		rm -rf $verify_res_after $verify_res_before
	else
		pwd
		echo $verify_res_after $verify_res_before
	fi
}

usage()
{
	echo Usage: $1
	echo "home_parent <dir>: Parent of the users home directory."
	echo "run_user <user>:  Name of user running the test."
	echo "test_cmd <command>: Test wrapper that is being executed."
	echo "verify_file <file>: Path to the test verification file."
	exit $2
}


ARGUMENT_LIST=(
	"home_parent"
	"run_user"
	"test_cmd"
	"test_name"
	"verify_file"
)
NO_ARGUMENTS=(
	"usage"
)
# read arguments
opts=$(getopt \
  --longoptions "$(printf "%s:," "${ARGUMENT_LIST[@]}")" \
  --longoptions "$(printf "%s," "${NO_ARGUMENTS[@]}")" \
  --name "$(basename "$0")" \
  --options "h" \
  -- "$@"
)

eval set --$opts

while [[ $# -gt 0 ]]; do
	case "$1" in
		--home_parent)
			home_parent=$2
			shift 2
		;;
		--run_user)
			run_user=$2
			shift 2
		;;
		--verify_file)
			verify_file=$2
			shift 2
		;;
		--test_cmd)
			test_cmd=$2
			shift 2
		;;
		--test_name)
			test_name=$2
			shift 2
		;;
		--usage)
			usage $0 0
		;;
		-h)
			usage $0 0
		;;
		--)
			break;
		;;
		*)
			echo "option not found ${1}"
			usage $0 1
		;;
	esac
done
vdir=`echo $verify_file | rev | cut -d / -f 3- | rev`
verification_run
exit $exit_rtc
